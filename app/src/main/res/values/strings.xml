<resources>
    <string name="app_name">Algorithmic</string>
    <string name="button_to_bubble">BubbleSort</string>
    <string name="button_to_selection">SelectionSort</string>
    <string name="button_to_new_graphics">NewGraphics</string>
    <string name="drawables">com.example.Algorithmic.Drawables</string>
    <string name="algo_key">com.example.Algorithmic.Algorithm</string>
    <string name="data">com.example.Algorithmic.Data</string>
    <string name="asset">com.example.Algorithmic.Asset</string>
    <string name="ordering">com.example.Algorithmic.Ordering</string>


    <string name="title_activity_new_algorithm">NewAlgorithmActivity</string>
    <string name="login_button">Login Existing User</string>
    <string name="new_user_button">Register A New User</string>
    <string name="title_activity_menu">Menu</string>

    <string name="summary">Summary</string>
    <string name="explanation">Explanation</string>
    <string name="simulate">Simulate</string>
    <string name="quiz">Quiz</string>

    <string name="large_text">
        "Fuckin straight up text right here"
    </string>

    <string name="action_settings">Settings</string>

    <!-- Bubble Sort Questions-->
    <string-array name="b_q1">
        <item>What is the worst case runtime for Bubble Sort?</item>
        <item>O(n^2)</item>
        <item>O(n)</item>
        <item>O(nlogn)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="b_q2">
        <item>What is the best case runtime for Bubble Sort?</item>
        <item>O(n)</item>
        <item>O(n^2)</item>
        <item>O(nlogn)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="b_q3">
        <item>What is the space complexity for Bubble Sort?</item>
        <item>O(1)</item>
        <item>O(n^2)</item>
        <item>O(n)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="b_q4">
        <item>Assume that we use Bubble Sort to sort n distinct elements in ascending order. When does the best case of Bubble Sort occur?</item>
        <item>When elements are sorted in ascending order</item>
        <item>When elements are sorted in descending order</item>
        <item>When elements are not sorted by any order</item>
        <item>There is no best case for Bubble Sort. It always takes O(n*n) time</item>
    </string-array>
    <string-array name="b_q5">
        <item>One of the simplest sorting algorithms is called bubble sort. Do you know why?</item>
        <item>Smaller elements 'bubble' to the top</item>
        <item>It encases each element in a 'bubble' before sorting them</item>
        <item>The designer hoped more people would use his sort if it had a cute name</item>
        <item>It's a mystery. Why is anything called what it is, really?</item>
    </string-array>

    <!-- Selection Sort Questions-->
    <string-array name="s_q1">
        <item>What is the runtime for Selection Sort?</item>
        <item>O(n^2)</item>
        <item>O(n)</item>
        <item>O(nlogn)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="s_q2">
        <item>What is the space complexity for Selection Sort?</item>
        <item>O(1)</item>
        <item>O(n)</item>
        <item>O(n^2)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="s_q3">
        <item>What are the correct intermediate steps of the following data set when it is being sorted with the Selection sort? 15,20,10,18</item>
        <item>10, 20,15,18  10,15,20,18  10,15,18,20</item>
        <item>15,20,10,18 15,10,20,18  10,15,20,18  10,15,18,20</item>
        <item>15,18,10,20  10,18,15,20  10,15,18,20  10,15,18,20</item>
        <item>15,10,20,18  15,10,18,20  10,15,18,20</item>
    </string-array>
    <string-array name="s_q4">
        <item>What is the first change that selection sort would make to this sequence to put it into ascending order: "3 1 4 2"?</item>
        <item>1 3 4 2</item>
        <item>2 4 1 3</item>
        <item>4 2 3 1</item>
        <item>3 2 4 1</item>
    </string-array>
    <string-array name="s_q5">
        <item>Which one of the following is the first step in a selection sort algorithm?</item>
        <item>The minimum value in the list is found</item>
        <item>The maximum value in the list is found</item>
        <item>Adjacent elements are swapped</item>
        <item>None of the above,</item>
    </string-array>

    <!-- Insertion Sort Questions-->
    <string-array name="i_q1">
        <item>What is the runtime for Insertion Sort?</item>
        <item>O(n^2)</item>
        <item>O(n)</item>
        <item>O(nlogn)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="i_q2">
        <item>What is the space complexity for Insertion Sort?</item>
        <item>O(1)</item>
        <item>O(n^2)</item>
        <item>O(n)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="i_q3">
        <item>Consider the following lists of partially sorted numbers. The double bars represent the sort marker. How many comparisons and swaps are needed to sort the next number. [1 3 4 5 8 9 || 2]</item>
        <item>6 comparisons, 5 swaps</item>
        <item>5 comparisons, 4 swaps</item>
        <item>4 comparisons, 5 swaps</item>
        <item>5 comparisons, 6 swaps</item>
    </string-array>
    <string-array name="i_q4">
        <item>What does an insertion sort do?</item>
        <item>Goes through a list, comparing two items that are side by side, and continues to move one value until it is in the correct place.</item>
        <item>Separates a list of data into different collections of data which are sorted and gathered back into a list</item>
        <item>Goes through a list of data a number of times and compares two items that are side by side to each other to see which is out of order</item>
        <item>None of the above.</item>
    </string-array>
    <string-array name="i_q5">
        <item>What operation does the Insertion Sort use to move numbers from the unsorted section to the sorted section of the list?</item>
        <item>Swapping</item>
        <item>Finding the minimum value</item>
        <item>Finding out an pivot value</item>
        <item>None of the above,</item>
    </string-array>

    <!-- Linear Search Questions-->
    <string-array name="ls_q1">
        <item>What is the worst case runtime for Linear Search?</item>
        <item>O(n)</item>
        <item>O(n^2)</item>
        <item>O(nlogn)</item>
        <item>O(n^3)</item>
    </string-array>
    <string-array name="ls_q2">
        <item>Which of these would be considered the worst case scenario for a linear search?</item>
        <item>The target value is not found in the list.</item>
        <item>The target value is found at the beginning of the list.</item>
        <item>The target value is found at the end of the list.</item>
        <item>The target value is found somewhere in the middle of the list.</item>
    </string-array>
    <string-array name="ls_q3">
        <item>Consider the following list: { 9, 2, 6, 8, -3, 7, 2, 15, 0, -1, 14, 99, -1 }If a linear search for the value -1 is performed, what will be returned?</item>
        <item>9</item>
        <item>10</item>
        <item>12</item>
        <item>-1</item>
    </string-array>
    <string-array name="ls_q4">
        <item>What does a linear search do?</item>
        <item>Looks at the first item of data, then each one in turn, until it finds the data item requested</item>
        <item>Splits the data until the requested data is found</item>
        <item>Organises the data into alphabetical order</item>
        <item>All of the above</item>
    </string-array>
    <string-array name="ls_q5">
        <item>What is an advantage of a linear search?</item>
        <item>It is a simple algorithm</item>
        <item>It only works with ordered lists</item>
        <item>It is very quick</item>
        <item>None of the above.</item>
    </string-array>

</resources>
